// Code generated by entc, DO NOT EDIT.

package sentense

const (
	// Label holds the string label denoting the sentense type in the database.
	Label = "sentense"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldChinese holds the string denoting the chinese field in the database.
	FieldChinese = "chinese"
	// FieldPinyin holds the string denoting the pinyin field in the database.
	FieldPinyin = "pinyin"
	// FieldEnglish holds the string denoting the english field in the database.
	FieldEnglish = "english"
	// EdgeReads holds the string denoting the reads edge name in mutations.
	EdgeReads = "reads"
	// Table holds the table name of the sentense in the database.
	Table = "sentenses"
	// ReadsTable is the table that holds the reads relation/edge.
	ReadsTable = "reads"
	// ReadsInverseTable is the table name for the Read entity.
	// It exists in this package in order to avoid circular dependency with the "read" package.
	ReadsInverseTable = "reads"
	// ReadsColumn is the table column denoting the reads relation/edge.
	ReadsColumn = "sentence_id"
)

// Columns holds all SQL columns for sentense fields.
var Columns = []string{
	FieldID,
	FieldChinese,
	FieldPinyin,
	FieldEnglish,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
